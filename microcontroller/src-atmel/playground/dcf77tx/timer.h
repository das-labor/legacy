#ifndef TIMER_H#define TIMER_H#include "timer_asm.h"// Tickfrequenz des Timers in Hz // 	// #define TIMER_TICKFREQ 450L 	// @ 7,3728 Mhz	// #define TIMER_TICKFREQ 225L	// @ 3,6864 MHz	// #define TIMER_TICKFREQ 675L 	// @ 11 Mhz	#define TIMER_TICKFREQ	(F_CPU / 16384UL) // (wird aus F_CPU im makefile berechnet)	void timer_init( void );inline unsigned long timer_diff_time( unsigned long first_timepoint, unsigned long second_timepoint);unsigned char timer_autodelay(unsigned long *handle, unsigned long time);// Gibt die aktuelle, seit einem Zeitpunkt timepoint vergangenen timer-ticks zurück #define	timer_elapsed_time(timepoint)	timer_diff_time( (timepoint), timer_getvalue())// Gibt die passende Ticks-Zahl zu einer Zeit in ms zurück// Beispiel: TIMER_MS(1000) => 450 , da 1s = 450 Ticks#define TIMER_MS(ms)	((ms * (F_CPU / 16384UL)) / 1000)  /* Aus timer_asm.h:	// Diesen Timer-Wert möglichst nicht anrührern, sondern nur mit	// timer_getvalue abfragen.	extern unsigned long    	timer_value;	// Gibt den aktuellen Timerwert zurück	unsigned long timer_getvalue( void );*/#endif// EOF
