   1               		.file	"spi.c"
   2               		.arch atmega32
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  74               	.global	spi_init
  76               	spi_init:
   1:spi.c         **** #include <avr/io.h>
   2:spi.c         **** #include "spi.h"
   3:spi.c         **** 
   4:spi.c         **** void spi_init(){
  78               	.LM1:
  79               	/* prologue: frame size=0 */
  80               	/* prologue end (size=0) */
   5:spi.c         **** 	//set output SPI pins to output
   6:spi.c         **** 	SPI_DDR |= (1<<SPI_PIN_MOSI) | (1<<SPI_PIN_SCK) | (1<<SPI_PIN_SS);
  82               	.LM2:
  83 0000 87B3      		in r24,55-0x20
  84 0002 8C62      		ori r24,lo8(44)
  85 0004 87BB      		out 55-0x20,r24
   7:spi.c         **** 
   8:spi.c         **** #ifdef SPI_HARDWARE
   9:spi.c         **** 	//          0             1
  10:spi.c         **** 	//DORD   msb first     lsb first
  11:spi.c         **** 	//CPOL   low idle      high idle
  12:spi.c         **** 	//CPHA   rising edge  fallling edge
  13:spi.c         **** 	
  14:spi.c         **** 	//SPR0    SPR1
  15:spi.c         **** 	// 0        0       ck/4
  16:spi.c         **** 	// 0        1       ck/16
  17:spi.c         **** 	// 1        0       ck/64
  18:spi.c         **** 	// 1        1       ck/128
  19:spi.c         **** 	
  20:spi.c         **** 	//Interrupt disable, SPI enable, MSB first, master, clk low idle, data valid on rising edge, ck/4
  21:spi.c         **** 	SPCR = (0<<SPIE) | (1<<SPE) | (0<<DORD) | (1<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0
  87               	.LM3:
  88 0006 80E5      		ldi r24,lo8(80)
  89 0008 8DB9      		out 45-0x20,r24
  22:spi.c         **** 
  23:spi.c         **** 	//Double speed on
  24:spi.c         **** 	SPSR = (1<<SPI2X);
  91               	.LM4:
  92 000a 81E0      		ldi r24,lo8(1)
  93 000c 8EB9      		out 46-0x20,r24
  94               	/* epilogue: frame size=0 */
  95 000e 0895      		ret
  96               	/* epilogue end (size=1) */
  97               	/* function spi_init size 8 (7) */
  99               	.Lscope0:
 102               	.global	spi_data
 104               	spi_data:
  25:spi.c         **** #endif
  26:spi.c         **** }
  27:spi.c         **** 
  28:spi.c         **** #ifndef SPI_HARDWARE
  29:spi.c         **** unsigned char spi_data(unsigned char c){
  30:spi.c         **** 	unsigned char x, d=d;
  31:spi.c         **** 	for(x=0;x<8;x++){
  32:spi.c         **** 		if(c & 0x80){
  33:spi.c         **** 			SPI_PORT |= (1<<SPI_PIN_MOSI);
  34:spi.c         **** 		}else{
  35:spi.c         **** 			SPI_PORT &= ~(1<<SPI_PIN_MOSI);	
  36:spi.c         **** 		}
  37:spi.c         **** 		SPI_PORT |= (1<<SPI_PIN_SCK);
  38:spi.c         **** 		d<<=1;
  39:spi.c         **** 		if(SPI_PIN & (1<<SPI_PIN_MISO)){
  40:spi.c         **** 			d|=1;
  41:spi.c         **** 		}
  42:spi.c         **** 		SPI_PORT &= ~(1<<SPI_PIN_SCK);
  43:spi.c         **** 		c<<=1;
  44:spi.c         **** 	}
  45:spi.c         **** 	return d;
  46:spi.c         **** }
  47:spi.c         **** #else
  48:spi.c         **** unsigned char spi_data(unsigned char c) {
 106               	.LM5:
 107               	/* prologue: frame size=0 */
 108               	/* prologue end (size=0) */
  49:spi.c         **** 	SPDR = c;
 110               	.LM6:
 111 0010 8FB9      		out 47-0x20,r24
 112               	.L3:
  50:spi.c         **** 	while(!(SPSR & (1<<SPIF)));
 114               	.LM7:
 115 0012 779B      		sbis 46-0x20,7
 116 0014 FECF      		rjmp .L3
  51:spi.c         **** 	c = SPDR;
 118               	.LM8:
 119 0016 8FB1      		in r24,47-0x20
  52:spi.c         **** 	return (c);
  53:spi.c         **** }
 121               	.LM9:
 122 0018 9927      		clr r25
 123               	/* epilogue: frame size=0 */
 124 001a 0895      		ret
 125               	/* epilogue end (size=1) */
 126               	/* function spi_data size 6 (5) */
 128               	.Lscope1:
 129               		.text
 131               	Letext:
 132               	/* File "spi.c": code   14 = 0x000e (  12), prologues   0, epilogues   2 */
DEFINED SYMBOLS
                            *ABS*:00000000 spi.c
     /tmp/ccOYdiJQ.s:3      *ABS*:0000003f __SREG__
     /tmp/ccOYdiJQ.s:4      *ABS*:0000003e __SP_H__
     /tmp/ccOYdiJQ.s:5      *ABS*:0000003d __SP_L__
     /tmp/ccOYdiJQ.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccOYdiJQ.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccOYdiJQ.s:76     .text:00000000 spi_init
     /tmp/ccOYdiJQ.s:104    .text:00000010 spi_data
     /tmp/ccOYdiJQ.s:131    .text:0000001c Letext

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
