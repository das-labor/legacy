   1               		.file	"main.c"
   2               		.arch atmega32
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 124               	.global	__vector_11
 126               	__vector_11:
   1:main.c        **** 
   2:main.c        **** #include <avr/io.h>
   3:main.c        **** 
   4:main.c        **** #include <avrx-io.h>
   5:main.c        **** #include <avrx-signal.h>
   6:main.c        **** #include "avrx.h"               // AvrX System calls/data structures
   7:main.c        **** //#include "serialio.h"           // From AvrX...
   8:main.c        **** 
   9:main.c        **** #include "config.h"
  10:main.c        **** #include "xcan.h"
  11:main.c        **** #include "xlap.h"
  12:main.c        **** #include "keys.h"
  13:main.c        **** #include "menu.h"
  14:main.c        **** #include "s1d1565.h"
  15:main.c        **** 
  16:main.c        **** //AVRX_GCC_TASK(Monitor, 20, 0);          // External Task: Debug Monitor
  17:main.c        **** 
  18:main.c        **** 
  19:main.c        **** AVRX_SIGINT(SIG_OVERFLOW0)
  20:main.c        **** {
 128               	.LM1:
 129               	/* prologue: frame size=0 */
 130               	/* prologue: naked */
 131               	/* prologue end (size=0) */
  21:main.c        ****     IntProlog();                // Save interrupted context, switch stacks
 133               	.LM2:
 134 0000 0E94 0000 		call IntProlog
  22:main.c        ****     TCNT0 = TCNT0_INIT;			// Reload the timer counter
 136               	.LM3:
 137 0004 86EE      		ldi r24,lo8(-26)
 138 0006 82BF      		out 82-0x20,r24
  23:main.c        ****     AvrXTimerHandler();         // Process Timer queue
 140               	.LM4:
 141 0008 0E94 0000 		call AvrXTimerHandler
  24:main.c        ****     Epilog();                   // Restore context of next running task
 143               	.LM5:
 144 000c 0E94 0000 		call Epilog
 145               	/* epilogue: frame size=0 */
 146               	/* epilogue: naked */
 147               	/* epilogue end (size=0) */
 148               	/* function __vector_11 size 8 (8) */
 150               	.Lscope0:
 152               	.global	main
 154               	main:
  25:main.c        **** };
  26:main.c        **** 
  27:main.c        **** int main(void)
  28:main.c        **** {
 156               	.LM6:
 157               	/* prologue: frame size=0 */
 158 0010 C0E0      		ldi r28,lo8(__stack - 0)
 159 0012 D0E0      		ldi r29,hi8(__stack - 0)
 160 0014 DEBF      		out __SP_H__,r29
 161 0016 CDBF      		out __SP_L__,r28
 162               	/* prologue end (size=4) */
  29:main.c        ****     AvrXSetKernelStack(0);
 164               	.LM7:
 165 0018 80E0      		ldi r24,lo8(0)
 166 001a 90E0      		ldi r25,hi8(0)
 167 001c 0E94 0000 		call AvrXSetKernelStack
  30:main.c        **** 
  31:main.c        ****     MCUCR = 1<<SE;      	// Enable "sleep" mode (low power when idle)
 169               	.LM8:
 170 0020 80E8      		ldi r24,lo8(-128)
 171 0022 85BF      		out 85-0x20,r24
  32:main.c        ****     TCNT0 = TCNT0_INIT;		// Load overflow counter of timer0
 173               	.LM9:
 174 0024 86EE      		ldi r24,lo8(-26)
 175 0026 82BF      		out 82-0x20,r24
  33:main.c        ****     TCCR0 = TMC8_CK256;		// Set Timer0 to CPUCLK/256
 177               	.LM10:
 178 0028 84E0      		ldi r24,lo8(4)
 179 002a 83BF      		out 83-0x20,r24
  34:main.c        ****     TIMSK = 1<<TOIE0;		// Enable interrupt flag
 181               	.LM11:
 182 002c 81E0      		ldi r24,lo8(1)
 183 002e 89BF      		out 89-0x20,r24
  35:main.c        **** 
  36:main.c        **** //	PORTD = 0xff;
  37:main.c        ****     //InitSerialIO(UBRR_INIT);    // Initialize USART baud rate generator
  38:main.c        **** 	dispInit(); // Display initialisierung
 185               	.LM12:
 186 0030 0E94 0000 		call dispInit
  39:main.c        **** 	//xlap_init();
  40:main.c        **** 	PORTA = 0xff; // Tastenport
 188               	.LM13:
 189 0034 8FEF      		ldi r24,lo8(-1)
 190 0036 8BBB      		out 59-0x20,r24
  41:main.c        **** 	DDRA = 0x00;
 192               	.LM14:
 193 0038 1ABA      		out 58-0x20,__zero_reg__
  42:main.c        **** 	
  43:main.c        **** 	//AvrXRunTask(TCB(laptask));
  44:main.c        **** 	//AvrXRunTask(TCB(keys));
  45:main.c        **** 	AvrXRunTask(TCB(menu));
 195               	.LM15:
 196 003a 80E0      		ldi r24,lo8(menuTcb)
 197 003c 90E0      		ldi r25,hi8(menuTcb)
 198 003e 0E94 0000 		call AvrXRunTask
  46:main.c        **** 
  47:main.c        ****     /* Needed for EEPROM access in monitor */
  48:main.c        **** 	AvrXSetSemaphore(&EEPromMutex);
 200               	.LM16:
 201 0042 80E0      		ldi r24,lo8(EEPromMutex)
 202 0044 90E0      		ldi r25,hi8(EEPromMutex)
 203 0046 0E94 0000 		call AvrXSetSemaphore
  49:main.c        **** 	
  50:main.c        **** 
  51:main.c        ****     Epilog();                   // Switch from AvrX Stack to first task
 205               	.LM17:
 206 004a 0E94 0000 		call Epilog
 207               	.L3:
  52:main.c        ****     while(1);
 209               	.LM18:
 210 004e FFCF      		rjmp .L3
 211               	/* epilogue: frame size=0 */
 212               	/* epilogue: noreturn */
 213               	/* epilogue end (size=0) */
 214               	/* function main size 32 (28) */
 216               	.Lscope1:
 217               		.text
 219               	Letext:
 220               	/* File "main.c": code   40 = 0x0028 (  36), prologues   4, epilogues   0 */
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccn9SzlQ.s:3      *ABS*:0000003f __SREG__
     /tmp/ccn9SzlQ.s:4      *ABS*:0000003e __SP_H__
     /tmp/ccn9SzlQ.s:5      *ABS*:0000003d __SP_L__
     /tmp/ccn9SzlQ.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccn9SzlQ.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccn9SzlQ.s:126    .text:00000000 __vector_11
     /tmp/ccn9SzlQ.s:154    .text:00000010 main
     /tmp/ccn9SzlQ.s:219    .text:00000050 Letext

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
IntProlog
AvrXTimerHandler
Epilog
__stack
AvrXSetKernelStack
dispInit
menuTcb
AvrXRunTask
EEPromMutex
AvrXSetSemaphore
