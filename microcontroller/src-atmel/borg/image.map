Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodqi4.o)
                              pixel.o (__udivmodqi4)
/usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_divmodhi4.o)
                              program.o (__divmodhi4)
/usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
                              borg_hw.o (__do_copy_data)
/usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
                              borg_hw.o (__do_clear_bss)
/usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(random.o)
                              program.o (random)
/usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_mulsi3.o)
                              /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(random.o) (__mulsi3)
/usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(random.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

gZeroPrd            0x2               main.o
pixmap              0x15              borg_hw.o
gStatus             0x1               main.o
gZero               0x4               main.o
gPeriod             0x2               main.o
gValue              0x4               main.o
gMeasureStop        0x4               main.o
gval                0x2               util.o
schmuh              0x1               util.o

Discarded input sections

 .stabstr       0x00000000        0x0 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 .stabstr       0x00000000        0x0 borg_hw.o
 .stabstr       0x00000000        0x0 main.o
 .stabstr       0x00000000        0x0 util.o
 .stabstr       0x00000000        0x0 pixel.o
 .stabstr       0x00000000        0x0 program.o
 .stabstr       0x00000000        0x0 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(random.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
LOAD borg_hw.o
LOAD main.o
LOAD util.o
LOAD pixel.o
LOAD program.o
LOAD /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x106c
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
 *(.init0)
 .init0         0x00000054        0x0 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x4 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008a        0x4 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
                0x0000008a                __vector_12
                0x0000008a                __bad_interrupt
                0x0000008a                __vector_6
                0x0000008a                __vector_3
                0x0000008a                __vector_13
                0x0000008a                __vector_17
                0x0000008a                __vector_19
                0x0000008a                __vector_7
                0x0000008a                __vector_5
                0x0000008a                __vector_4
                0x0000008a                __vector_9
                0x0000008a                __vector_15
                0x0000008a                __vector_8
                0x0000008a                __vector_14
                0x0000008a                __vector_10
                0x0000008a                __vector_16
                0x0000008a                __vector_18
                0x0000008a                __vector_20
 .text          0x0000008e      0x13c borg_hw.o
                0x0000019a                timer0_on
                0x00000118                __vector_11
                0x0000008e                colshow
                0x000001aa                borg_hw_init
 .text          0x000001ca      0x2b8 main.o
                0x00000264                __vector_1
                0x000001ca                g_init
                0x00000330                g_Calibrate
                0x00000438                main
                0x000001d8                __vector_2
                0x000002ea                g_calcPeriod
 .text          0x00000482       0x22 util.o
                0x00000482                wait
 .text          0x000004a4      0x22a pixel.o
                0x0000054e                shift_pixmap_l
                0x000005ba                get_next_pixel
                0x0000062a                set_cursor
                0x00000600                direction_r
                0x0000068a                walk
                0x00000654                next_pixel
                0x00000584                get_pixel
                0x000004a4                clear_screen
                0x000004d2                setpixel
 .text          0x000006ce      0x7e2 program.o
                0x000006ce                feuer
                0x00000c24                test_level2
                0x00000cd0                schachbrett
                0x00000c7a                test_level1
                0x00000dba                spirale
                0x00000b68                fadein
                0x0000088e                matrix
                0x00000bce                test_level3
                0x00000d66                joern1
 .text          0x00000eb0        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x00000eb0        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_divmodhi4.o)
 .text          0x00000eb0        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .text          0x00000eb0        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000eb0        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00000eb0       0xd4 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(random.o)
                0x00000f68                random
                0x00000f62                random_r
                0x00000f72                srandom
 .text          0x00000f84        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_mulsi3.o)
 .text          0x00000f84        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodsi4.o)
                0x00000f84                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000f84       0x18 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodqi4.o)
                0x00000f84                __udivmodqi4
 .text.libgcc   0x00000f9c       0x26 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_divmodhi4.o)
                0x00000f9c                __divmodhi4
                0x00000f9c                _div
 .text.libgcc   0x00000fc2        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000fc2        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000fc2       0x28 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
                0x00000fc2                __udivmodhi4
 .text.libgcc   0x00000fea       0x3e /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_mulsi3.o)
                0x00000fea                __mulsi3
 .text.libgcc   0x00001028       0x44 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodsi4.o)
                0x00001028                __udivmodsi4
                0x0000106c                . = ALIGN (0x2)
 *(.fini9)
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 *(.fini0)
                0x0000106c                _etext = .

.data           0x00800060        0xe load address 0x0000106c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x1 borg_hw.o
 .data          0x00800061        0x0 main.o
 .data          0x00800061        0x0 util.o
 .data          0x00800061        0x8 pixel.o
                0x00800061                shl_table
 .data          0x00800069        0x0 program.o
 .data          0x00800069        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x00800069        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_divmodhi4.o)
 .data          0x00800069        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800069        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
 .data          0x00800069        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800069        0x4 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(random.o)
 .data          0x0080006d        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_mulsi3.o)
 .data          0x0080006d        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080006e                . = ALIGN (0x2)
 *fill*         0x0080006d        0x1 00
                0x0080006e                _edata = .
                0x0080006e                PROVIDE (__data_end, .)

.bss            0x0080006e       0x2f
                0x0080006e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080006e        0x2 borg_hw.o
 .bss           0x00800070        0x4 main.o
 .bss           0x00800074        0x0 util.o
 .bss           0x00800074        0x0 pixel.o
 .bss           0x00800074        0x0 program.o
 .bss           0x00800074        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x00800074        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x00800074        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x00800074        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00800074        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x00800074        0x0 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(random.o)
 .bss           0x00800074        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_mulsi3.o)
 .bss           0x00800074        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800074       0x15 borg_hw.o
                0x00800074                pixmap
 COMMON         0x00800089       0x11 main.o
                0x00800089                gZeroPrd
                0x0080008b                gStatus
                0x0080008c                gZero
                0x00800090                gPeriod
                0x00800092                gValue
                0x00800096                gMeasureStop
 COMMON         0x0080009a        0x3 util.o
                0x0080009a                gval
                0x0080009c                schmuh
                0x0080009d                PROVIDE (__bss_end, .)
                0x0000106c                __data_load_start = LOADADDR (.data)
                0x0000107a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080009d        0x0
                0x0080009d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080009d                PROVIDE (__noinit_end, .)
                0x0080009d                _end = .
                0x0080009d                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000     0x2724
 *(.stab)
 .stab          0x00000000      0x36c /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 .stab          0x0000036c      0x630 borg_hw.o
                                0x63c (size before relaxing)
 .stab          0x0000099c      0x75c main.o
                                0x90c (size before relaxing)
 .stab          0x000010f8      0x1bc util.o
                                0x384 (size before relaxing)
 .stab          0x000012b4      0x6cc pixel.o
                                0x720 (size before relaxing)
 .stab          0x00001980      0xaa4 program.o
                                0xc90 (size before relaxing)
 .stab          0x00002424      0x300 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(random.o)
                                0x30c (size before relaxing)

.stabstr        0x00000000     0x1455
 *(.stabstr)
 .stabstr       0x00000000     0x1455 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(image.elf elf32-avr)
