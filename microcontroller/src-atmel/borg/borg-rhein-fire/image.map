Archive member included because of file (symbol)

c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a(_udivmodqi4.o)
                              rhein.o (__udivmodqi4)
c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a(_udivmodhi4.o)
                              scrolltext3.o (__udivmodhi4)
c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a(_divmodhi4.o)
                              programm.o (__divmodhi4)
c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a(_copy_data.o)
                              borg_hw.o (__do_copy_data)
c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a(_clear_bss.o)
                              borg_hw.o (__do_clear_bss)
c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                              scrolltext3.o (malloc)
c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
                              programm.o (memcpy)
c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(setjmp.o)
                              main.o (setjmp)
c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(strtok_r.o)
                              scrolltext3.o (strtok_r)

Allocating common symbols
Common symbol       size              file

pixmap              0x60              borg_hw.o
__brkval            0x2               c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(malloc.o)
waitForFire         0x1               joystick.o
oldOldmode          0x1               main.o
mode                0x1               main.o
oldMode             0x1               main.o
newmode_jmpbuf      0x19              main.o
fonts               0x9               scrolltext3.o
__flp               0x2               c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(malloc.o)
text_pixmap         0x2               scrolltext3.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5/crtm32.o
LOAD borg_hw.o
LOAD main.o
LOAD util.o
LOAD pixel.o
LOAD programm.o
LOAD scrolltext3.o
LOAD font_arial8.o
LOAD joystick.o
LOAD rhein.o
LOAD c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a
LOAD c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a
LOAD c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x38ee
 *(.vectors)
 .vectors       0x00000000       0x54 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000054       0x30 scrolltext3.o
                0x00000054                colorTable
 .progmem.data  0x00000084      0x48e font_arial8.o
                0x00000084                fontData_arial8
                0x00000444                fontIndex_arial8
 .progmem.data  0x00000512      0x23d rhein.o
                0x0000052a                player
                0x0000064f                rhein
                0x0000060f                Smile1
                0x00000512                player2
                0x00000566                numbers
                0x000005cf                Smile2
                0x00000750                . = ALIGN (0x2)
 *fill*         0x0000074f        0x1 00
 *(.init0)
 *(.init1)
 *(.init2)
 .init2         0x00000750        0xc c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5/crtm32.o
 *(.init3)
 *(.init4)
 .init4         0x0000075c       0x16 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a(_copy_data.o)
                0x0000075c                __do_copy_data
 .init4         0x00000772       0x10 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a(_clear_bss.o)
                0x00000772                __do_clear_bss
 *(.init5)
 *(.init6)
 *(.init7)
 *(.init8)
 *(.init9)
 .init9         0x00000782        0x4 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5/crtm32.o
 *(.text)
 .text          0x00000786        0x4 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5/crtm32.o
                0x00000786                __vector_1
                0x00000786                __vector_12
                0x00000786                __bad_interrupt
                0x00000786                __vector_6
                0x00000786                __vector_3
                0x00000786                __vector_11
                0x00000786                __vector_13
                0x00000786                __vector_17
                0x00000786                __vector_19
                0x00000786                __vector_7
                0x00000786                __vector_5
                0x00000786                __vector_4
                0x00000786                __vector_9
                0x00000786                __vector_2
                0x00000786                __vector_15
                0x00000786                __vector_8
                0x00000786                __vector_14
                0x00000786                __vector_16
                0x00000786                __vector_18
                0x00000786                __vector_20
 .text          0x0000078a      0x196 borg_hw.o
                0x000008d8                timer0_off
                0x000008e6                timer0_on
                0x0000078a                rowshow
                0x000008f6                borg_hw_init
                0x00000806                __vector_10
 .text          0x00000920      0x256 main.o
                0x00000920                main
 .text          0x00000b76       0x3e util.o
                0x00000b76                wait
 .text          0x00000bb4      0x268 pixel.o
                0x00000c58                shift_pixmap_l
                0x00000d0e                get_next_pixel
                0x00000d80                set_cursor
                0x00000d4a                direction_r
                0x00000dde                walk
                0x00000da6                next_pixel
                0x00000cc6                get_pixel
                0x00000bb4                clear_screen
                0x00000be6                setpixel
 .text          0x00000e1c     0x1212 programm.o
                0x0000103a                snake
                0x00000fc8                random
                0x000018d2                feuer
                0x00000e78                test_level2
                0x000014fe                schachbrett
                0x00000e1c                test1
                0x00000e48                test_level1
                0x00001e56                tetris
                0x00000ee8                spirale
                0x000015a4                fadein
                0x000015dc                matrix
                0x00000ea8                test_level3
                0x00000ed8                off
                0x000014ae                joern1
 .text          0x0000202e      0xae6 scrolltext3.o
                0x00002886                scrolltext
                0x000020a0                update_pixmap
                0x000026b8                drawBlob
                0x000020f0                getLen
                0x0000255a                updateBlob
                0x000021b6                blobNextCommand
                0x0000206c                clear_text_pixmap
                0x0000202e                text_setpixel
                0x000023e2                setupBlob
                0x00002160                getnum
 .text          0x00002b14       0x12 joystick.o
                0x00002b14                joy_init
 .text          0x00002b26      0xa44 rhein.o
                0x00002f88                showScores
                0x00002e60                running
                0x00002c20                drawNumber
                0x00002bc6                rhein_fire_logo
                0x00003220                rhein_matrix
                0x00002b26                drawSmiley
                0x00002d32                drawField
                0x00003000                rhein_fire
                0x00002cf4                test
                0x00002cca                drawRow
                0x00002b8a                dropSmiley
                0x00002ca0                drawLine
 .text          0x0000356a      0x222 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x0000356a                malloc
                0x000036c8                free
 .text          0x0000378c       0x12 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
                0x0000378c                memcpy
 .text          0x0000379e       0x86 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(setjmp.o)
                0x000037e0                longjmp
                0x0000379e                setjmp
 .text          0x00003824       0x64 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(strtok_r.o)
                0x00003824                strtok_r
                0x00003888                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00003888       0x18 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a(_udivmodqi4.o)
                0x00003888                __udivmodqi4
 .text.libgcc   0x000038a0       0x28 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a(_udivmodhi4.o)
                0x000038a0                __udivmodhi4
 .text.libgcc   0x000038c8       0x26 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr5\libgcc.a(_divmodhi4.o)
                0x000038c8                __divmodhi4
                0x000038c8                _div
                0x000038ee                . = ALIGN (0x2)
 *(.fini9)
 *(.fini8)
 *(.fini7)
 *(.fini6)
 *(.fini5)
 *(.fini4)
 *(.fini3)
 *(.fini2)
 *(.fini1)
 *(.fini0)
                0x000038ee                _etext = .

.data           0x00800060      0x1b0 load address 0x000038ee
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060      0x162 main.o
 .data          0x008001c2        0x8 pixel.o
                0x008001c2                shl_table
 .data          0x008001ca       0x1a programm.o
 .data          0x008001e4        0x2 scrolltext3.o
 .data          0x008001e6        0x9 font_arial8.o
                0x008001e6                font_arial8
 .data          0x008001ef       0x1a rhein.o
 .data          0x00800209        0x6 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x0080020b                __malloc_heap_start
                0x00800209                __malloc_heap_end
                0x0080020d                __malloc_margin
 *(.gnu.linkonce.d*)
                0x00800210                . = ALIGN (0x2)
 *fill*         0x0080020f        0x1 00
                0x00800210                _edata = .
                0x00800210                PROVIDE (__data_end, .)

.bss            0x00800210       0x93
                0x00800210                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800210        0x2 borg_hw.o
 .bss           0x00800212        0x5 scrolltext3.o
 *(COMMON)
 COMMON         0x00800217       0x60 borg_hw.o
                                  0x0 (size before relaxing)
                0x00800217                pixmap
 COMMON         0x00800277       0x1c main.o
                                  0x0 (size before relaxing)
                0x00800277                oldOldmode
                0x00800278                mode
                0x00800279                oldMode
                0x0080027a                newmode_jmpbuf
 COMMON         0x00800293        0xb scrolltext3.o
                                  0x0 (size before relaxing)
                0x00800293                fonts
                0x0080029c                text_pixmap
 COMMON         0x0080029e        0x1 joystick.o
                                  0x0 (size before relaxing)
                0x0080029e                waitForFire
 COMMON         0x0080029f        0x4 c:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                                  0x0 (size before relaxing)
                0x0080029f                __brkval
                0x008002a1                __flp
                0x008002a3                PROVIDE (__bss_end, .)
                0x000038ee                __data_load_start = LOADADDR (.data)
                0x00003a9e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002a3        0x0
                0x008002a3                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002a3                PROVIDE (__noinit_end, .)
                0x008002a3                _end = .
                0x008002a3                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(image.elf elf32-avr)
