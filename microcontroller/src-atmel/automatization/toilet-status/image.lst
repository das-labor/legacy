
image.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000032a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  0000032a  0000039e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000053  0080006e  00000338  000003ac  2**0
                  ALLOC
  3 .stab         000006b4  00000000  00000000  000003ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000054  00000000  00000000  00000a60  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ea e2       	ldi	r30, 0x2A	; 42
  3a:	f3 e0       	ldi	r31, 0x03	; 3
  3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
  42:	ae 36       	cpi	r26, 0x6E	; 110
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	ae e6       	ldi	r26, 0x6E	; 110
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a1 3c       	cpi	r26, 0xC1	; 193
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	09 d0       	rcall	.+18     	; 0x6c <main>
  5a:	65 c1       	rjmp	.+714    	; 0x326 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__heap_end>

0000005e <init>:
  5e:	80 e8       	ldi	r24, 0x80	; 128
  60:	88 b9       	out	0x08, r24	; 8
  62:	09 d1       	rcall	.+530    	; 0x276 <spi_init>
  64:	55 d0       	rcall	.+170    	; 0x110 <can_init>
  66:	14 d1       	rcall	.+552    	; 0x290 <read_can_addr>
  68:	78 94       	sei
  6a:	08 95       	ret

0000006c <main>:
  6c:	f8 df       	rcall	.-16     	; 0x5e <init>
  6e:	4a d1       	rcall	.+660    	; 0x304 <lights_init>
  70:	18 d1       	rcall	.+560    	; 0x2a2 <can_handler>
  72:	fe cf       	rjmp	.-4      	; 0x70 <main+0x4>

00000074 <can_buffer_get>:
  74:	85 ea       	ldi	r24, 0xA5	; 165
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	08 95       	ret

0000007a <can_free>:
  7a:	08 95       	ret

0000007c <mcp_bitmod>:
  7c:	ff 92       	push	r15
  7e:	0f 93       	push	r16
  80:	1f 93       	push	r17
  82:	18 2f       	mov	r17, r24
  84:	06 2f       	mov	r16, r22
  86:	f4 2e       	mov	r15, r20
  88:	c2 98       	cbi	0x18, 2	; 24
  8a:	85 e0       	ldi	r24, 0x05	; 5
  8c:	fc d0       	rcall	.+504    	; 0x286 <spi_send>
  8e:	81 2f       	mov	r24, r17
  90:	fa d0       	rcall	.+500    	; 0x286 <spi_send>
  92:	80 2f       	mov	r24, r16
  94:	f8 d0       	rcall	.+496    	; 0x286 <spi_send>
  96:	8f 2d       	mov	r24, r15
  98:	f6 d0       	rcall	.+492    	; 0x286 <spi_send>
  9a:	c2 9a       	sbi	0x18, 2	; 24
  9c:	1f 91       	pop	r17
  9e:	0f 91       	pop	r16
  a0:	ff 90       	pop	r15
  a2:	08 95       	ret

000000a4 <can_setled>:
  a4:	66 23       	and	r22, r22
  a6:	11 f4       	brne	.+4      	; 0xac <can_setled+0x8>
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	01 c0       	rjmp	.+2      	; 0xae <can_setled+0xa>
  ac:	4f ef       	ldi	r20, 0xFF	; 255
  ae:	60 e1       	ldi	r22, 0x10	; 16
  b0:	70 e0       	ldi	r23, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <can_setled+0x14>
  b4:	66 0f       	add	r22, r22
  b6:	77 1f       	adc	r23, r23
  b8:	8a 95       	dec	r24
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <can_setled+0x10>
  bc:	8c e0       	ldi	r24, 0x0C	; 12
  be:	de df       	rcall	.-68     	; 0x7c <mcp_bitmod>
  c0:	08 95       	ret

000000c2 <mcp_read>:
  c2:	1f 93       	push	r17
  c4:	18 2f       	mov	r17, r24
  c6:	c2 98       	cbi	0x18, 2	; 24
  c8:	83 e0       	ldi	r24, 0x03	; 3
  ca:	dd d0       	rcall	.+442    	; 0x286 <spi_send>
  cc:	81 2f       	mov	r24, r17
  ce:	db d0       	rcall	.+438    	; 0x286 <spi_send>
  d0:	80 e0       	ldi	r24, 0x00	; 0
  d2:	d9 d0       	rcall	.+434    	; 0x286 <spi_send>
  d4:	c2 9a       	sbi	0x18, 2	; 24
  d6:	1f 91       	pop	r17
  d8:	08 95       	ret

000000da <mcp_write>:
  da:	0f 93       	push	r16
  dc:	1f 93       	push	r17
  de:	18 2f       	mov	r17, r24
  e0:	06 2f       	mov	r16, r22
  e2:	c2 98       	cbi	0x18, 2	; 24
  e4:	82 e0       	ldi	r24, 0x02	; 2
  e6:	cf d0       	rcall	.+414    	; 0x286 <spi_send>
  e8:	81 2f       	mov	r24, r17
  ea:	cd d0       	rcall	.+410    	; 0x286 <spi_send>
  ec:	80 2f       	mov	r24, r16
  ee:	cb d0       	rcall	.+406    	; 0x286 <spi_send>
  f0:	c2 9a       	sbi	0x18, 2	; 24
  f2:	1f 91       	pop	r17
  f4:	0f 91       	pop	r16
  f6:	08 95       	ret

000000f8 <can_setfilter>:
  f8:	80 e6       	ldi	r24, 0x60	; 96
  fa:	60 e6       	ldi	r22, 0x60	; 96
  fc:	ee df       	rcall	.-36     	; 0xda <mcp_write>
  fe:	08 95       	ret

00000100 <can_setmode>:
 100:	68 2f       	mov	r22, r24
 102:	62 95       	swap	r22
 104:	66 0f       	add	r22, r22
 106:	60 7e       	andi	r22, 0xE0	; 224
 108:	64 60       	ori	r22, 0x04	; 4
 10a:	8f e0       	ldi	r24, 0x0F	; 15
 10c:	e6 df       	rcall	.-52     	; 0xda <mcp_write>
 10e:	08 95       	ret

00000110 <can_init>:
 110:	ba 9a       	sbi	0x17, 2	; 23
 112:	c2 98       	cbi	0x18, 2	; 24
 114:	c2 98       	cbi	0x18, 2	; 24
 116:	80 ec       	ldi	r24, 0xC0	; 192
 118:	b6 d0       	rcall	.+364    	; 0x286 <spi_send>
 11a:	c2 9a       	sbi	0x18, 2	; 24
 11c:	80 ea       	ldi	r24, 0xA0	; 160
 11e:	9f e0       	ldi	r25, 0x0F	; 15
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <can_init+0x10>
 124:	8c e0       	ldi	r24, 0x0C	; 12
 126:	6c e0       	ldi	r22, 0x0C	; 12
 128:	d8 df       	rcall	.-80     	; 0xda <mcp_write>
 12a:	8a e2       	ldi	r24, 0x2A	; 42
 12c:	63 e4       	ldi	r22, 0x43	; 67
 12e:	d5 df       	rcall	.-86     	; 0xda <mcp_write>
 130:	89 e2       	ldi	r24, 0x29	; 41
 132:	61 ef       	ldi	r22, 0xF1	; 241
 134:	d2 df       	rcall	.-92     	; 0xda <mcp_write>
 136:	88 e2       	ldi	r24, 0x28	; 40
 138:	65 e0       	ldi	r22, 0x05	; 5
 13a:	cf df       	rcall	.-98     	; 0xda <mcp_write>
 13c:	8b e2       	ldi	r24, 0x2B	; 43
 13e:	61 e0       	ldi	r22, 0x01	; 1
 140:	cc df       	rcall	.-104    	; 0xda <mcp_write>
 142:	da df       	rcall	.-76     	; 0xf8 <can_setfilter>
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	db df       	rcall	.-74     	; 0x100 <can_setmode>
 14a:	8b e2       	ldi	r24, 0x2B	; 43
 14c:	61 e0       	ldi	r22, 0x01	; 1
 14e:	c5 df       	rcall	.-118    	; 0xda <mcp_write>
 150:	08 95       	ret

00000152 <message_fetch>:
 152:	1f 93       	push	r17
 154:	cf 93       	push	r28
 156:	df 93       	push	r29
 158:	ec 01       	movw	r28, r24
 15a:	c2 98       	cbi	0x18, 2	; 24
 15c:	83 e0       	ldi	r24, 0x03	; 3
 15e:	93 d0       	rcall	.+294    	; 0x286 <spi_send>
 160:	81 e6       	ldi	r24, 0x61	; 97
 162:	91 d0       	rcall	.+290    	; 0x286 <spi_send>
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	8f d0       	rcall	.+286    	; 0x286 <spi_send>
 168:	18 2f       	mov	r17, r24
 16a:	86 95       	lsr	r24
 16c:	86 95       	lsr	r24
 16e:	8a 83       	std	Y+2, r24	; 0x02
 170:	80 e0       	ldi	r24, 0x00	; 0
 172:	89 d0       	rcall	.+274    	; 0x286 <spi_send>
 174:	12 95       	swap	r17
 176:	10 73       	andi	r17, 0x30	; 48
 178:	98 2f       	mov	r25, r24
 17a:	96 95       	lsr	r25
 17c:	96 95       	lsr	r25
 17e:	96 95       	lsr	r25
 180:	9c 70       	andi	r25, 0x0C	; 12
 182:	19 2b       	or	r17, r25
 184:	83 70       	andi	r24, 0x03	; 3
 186:	18 2b       	or	r17, r24
 188:	1b 83       	std	Y+3, r17	; 0x03
 18a:	80 e0       	ldi	r24, 0x00	; 0
 18c:	7c d0       	rcall	.+248    	; 0x286 <spi_send>
 18e:	88 83       	st	Y, r24
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	79 d0       	rcall	.+242    	; 0x286 <spi_send>
 194:	89 83       	std	Y+1, r24	; 0x01
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	76 d0       	rcall	.+236    	; 0x286 <spi_send>
 19a:	8f 70       	andi	r24, 0x0F	; 15
 19c:	8c 83       	std	Y+4, r24	; 0x04
 19e:	10 e0       	ldi	r17, 0x00	; 0
 1a0:	07 c0       	rjmp	.+14     	; 0x1b0 <message_fetch+0x5e>
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	70 d0       	rcall	.+224    	; 0x286 <spi_send>
 1a6:	fe 01       	movw	r30, r28
 1a8:	e1 0f       	add	r30, r17
 1aa:	f1 1d       	adc	r31, r1
 1ac:	85 83       	std	Z+5, r24	; 0x05
 1ae:	1f 5f       	subi	r17, 0xFF	; 255
 1b0:	8c 81       	ldd	r24, Y+4	; 0x04
 1b2:	18 17       	cp	r17, r24
 1b4:	b0 f3       	brcs	.-20     	; 0x1a2 <message_fetch+0x50>
 1b6:	c2 9a       	sbi	0x18, 2	; 24
 1b8:	8c e2       	ldi	r24, 0x2C	; 44
 1ba:	61 e0       	ldi	r22, 0x01	; 1
 1bc:	40 e0       	ldi	r20, 0x00	; 0
 1be:	5e df       	rcall	.-324    	; 0x7c <mcp_bitmod>
 1c0:	df 91       	pop	r29
 1c2:	cf 91       	pop	r28
 1c4:	1f 91       	pop	r17
 1c6:	08 95       	ret

000001c8 <can_get>:
 1c8:	82 99       	sbic	0x10, 2	; 16
 1ca:	fe cf       	rjmp	.-4      	; 0x1c8 <can_get>
 1cc:	83 eb       	ldi	r24, 0xB3	; 179
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	c0 df       	rcall	.-128    	; 0x152 <message_fetch>
 1d2:	83 eb       	ldi	r24, 0xB3	; 179
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	08 95       	ret

000001d8 <can_get_nb>:
 1d8:	82 99       	sbic	0x10, 2	; 16
 1da:	0e c0       	rjmp	.+28     	; 0x1f8 <can_get_nb+0x20>
 1dc:	c2 98       	cbi	0x18, 2	; 24
 1de:	80 ea       	ldi	r24, 0xA0	; 160
 1e0:	52 d0       	rcall	.+164    	; 0x286 <spi_send>
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	50 d0       	rcall	.+160    	; 0x286 <spi_send>
 1e6:	c2 9a       	sbi	0x18, 2	; 24
 1e8:	80 ff       	sbrs	r24, 0
 1ea:	06 c0       	rjmp	.+12     	; 0x1f8 <can_get_nb+0x20>
 1ec:	83 eb       	ldi	r24, 0xB3	; 179
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	b0 df       	rcall	.-160    	; 0x152 <message_fetch>
 1f2:	23 eb       	ldi	r18, 0xB3	; 179
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <can_get_nb+0x24>
 1f8:	20 e0       	ldi	r18, 0x00	; 0
 1fa:	30 e0       	ldi	r19, 0x00	; 0
 1fc:	c9 01       	movw	r24, r18
 1fe:	08 95       	ret

00000200 <message_load>:
 200:	1f 93       	push	r17
 202:	cf 93       	push	r28
 204:	df 93       	push	r29
 206:	ec 01       	movw	r28, r24
 208:	c2 98       	cbi	0x18, 2	; 24
 20a:	82 e0       	ldi	r24, 0x02	; 2
 20c:	3c d0       	rcall	.+120    	; 0x286 <spi_send>
 20e:	81 e3       	ldi	r24, 0x31	; 49
 210:	3a d0       	rcall	.+116    	; 0x286 <spi_send>
 212:	8b 81       	ldd	r24, Y+3	; 0x03
 214:	82 95       	swap	r24
 216:	8f 70       	andi	r24, 0x0F	; 15
 218:	9a 81       	ldd	r25, Y+2	; 0x02
 21a:	99 0f       	add	r25, r25
 21c:	99 0f       	add	r25, r25
 21e:	89 2b       	or	r24, r25
 220:	32 d0       	rcall	.+100    	; 0x286 <spi_send>
 222:	9b 81       	ldd	r25, Y+3	; 0x03
 224:	89 2f       	mov	r24, r25
 226:	8c 70       	andi	r24, 0x0C	; 12
 228:	88 0f       	add	r24, r24
 22a:	88 0f       	add	r24, r24
 22c:	88 0f       	add	r24, r24
 22e:	88 60       	ori	r24, 0x08	; 8
 230:	93 70       	andi	r25, 0x03	; 3
 232:	89 2b       	or	r24, r25
 234:	28 d0       	rcall	.+80     	; 0x286 <spi_send>
 236:	88 81       	ld	r24, Y
 238:	26 d0       	rcall	.+76     	; 0x286 <spi_send>
 23a:	89 81       	ldd	r24, Y+1	; 0x01
 23c:	24 d0       	rcall	.+72     	; 0x286 <spi_send>
 23e:	8c 81       	ldd	r24, Y+4	; 0x04
 240:	22 d0       	rcall	.+68     	; 0x286 <spi_send>
 242:	10 e0       	ldi	r17, 0x00	; 0
 244:	06 c0       	rjmp	.+12     	; 0x252 <message_load+0x52>
 246:	fe 01       	movw	r30, r28
 248:	e1 0f       	add	r30, r17
 24a:	f1 1d       	adc	r31, r1
 24c:	85 81       	ldd	r24, Z+5	; 0x05
 24e:	1b d0       	rcall	.+54     	; 0x286 <spi_send>
 250:	1f 5f       	subi	r17, 0xFF	; 255
 252:	8c 81       	ldd	r24, Y+4	; 0x04
 254:	18 17       	cp	r17, r24
 256:	b8 f3       	brcs	.-18     	; 0x246 <message_load+0x46>
 258:	c2 9a       	sbi	0x18, 2	; 24
 25a:	c2 98       	cbi	0x18, 2	; 24
 25c:	82 e0       	ldi	r24, 0x02	; 2
 25e:	13 d0       	rcall	.+38     	; 0x286 <spi_send>
 260:	80 e3       	ldi	r24, 0x30	; 48
 262:	11 d0       	rcall	.+34     	; 0x286 <spi_send>
 264:	88 e0       	ldi	r24, 0x08	; 8
 266:	0f d0       	rcall	.+30     	; 0x286 <spi_send>
 268:	c2 9a       	sbi	0x18, 2	; 24
 26a:	df 91       	pop	r29
 26c:	cf 91       	pop	r28
 26e:	1f 91       	pop	r17
 270:	08 95       	ret

00000272 <can_transmit>:
 272:	c6 df       	rcall	.-116    	; 0x200 <message_load>
 274:	08 95       	ret

00000276 <spi_init>:
 276:	87 b3       	in	r24, 0x17	; 23
 278:	88 62       	ori	r24, 0x28	; 40
 27a:	87 bb       	out	0x17, r24	; 23
 27c:	80 e5       	ldi	r24, 0x50	; 80
 27e:	8d b9       	out	0x0d, r24	; 13
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	8e b9       	out	0x0e, r24	; 14
 284:	08 95       	ret

00000286 <spi_send>:
 286:	8f b9       	out	0x0f, r24	; 15
 288:	77 9b       	sbis	0x0e, 7	; 14
 28a:	fe cf       	rjmp	.-4      	; 0x288 <spi_send+0x2>
 28c:	8f b1       	in	r24, 0x0f	; 15
 28e:	08 95       	ret

00000290 <read_can_addr>:
 290:	e1 99       	sbic	0x1c, 1	; 28
 292:	fe cf       	rjmp	.-4      	; 0x290 <read_can_addr>
 294:	1f ba       	out	0x1f, r1	; 31
 296:	1e ba       	out	0x1e, r1	; 30
 298:	e0 9a       	sbi	0x1c, 0	; 28
 29a:	8d b3       	in	r24, 0x1d	; 29
 29c:	80 93 6e 00 	sts	0x006E, r24
 2a0:	08 95       	ret

000002a2 <can_handler>:
 2a2:	9a df       	rcall	.-204    	; 0x1d8 <can_get_nb>
 2a4:	fc 01       	movw	r30, r24
 2a6:	00 97       	sbiw	r24, 0x00	; 0
 2a8:	61 f1       	breq	.+88     	; 0x302 <can_handler+0x60>
 2aa:	91 81       	ldd	r25, Z+1	; 0x01
 2ac:	80 91 6e 00 	lds	r24, 0x006E
 2b0:	98 17       	cp	r25, r24
 2b2:	39 f5       	brne	.+78     	; 0x302 <can_handler+0x60>
 2b4:	83 81       	ldd	r24, Z+3	; 0x03
 2b6:	80 33       	cpi	r24, 0x30	; 48
 2b8:	c9 f4       	brne	.+50     	; 0x2ec <can_handler+0x4a>
 2ba:	85 81       	ldd	r24, Z+5	; 0x05
 2bc:	88 23       	and	r24, r24
 2be:	69 f0       	breq	.+26     	; 0x2da <can_handler+0x38>
 2c0:	82 30       	cpi	r24, 0x02	; 2
 2c2:	f9 f4       	brne	.+62     	; 0x302 <can_handler+0x60>
 2c4:	15 bc       	out	0x25, r1	; 37
 2c6:	28 e0       	ldi	r18, 0x08	; 8
 2c8:	88 e1       	ldi	r24, 0x18	; 24
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	0f b6       	in	r0, 0x3f	; 63
 2ce:	f8 94       	cli
 2d0:	a8 95       	wdr
 2d2:	81 bd       	out	0x21, r24	; 33
 2d4:	0f be       	out	0x3f, r0	; 63
 2d6:	21 bd       	out	0x21, r18	; 33
 2d8:	ff cf       	rjmp	.-2      	; 0x2d8 <can_handler+0x36>
 2da:	90 93 60 00 	sts	0x0060, r25
 2de:	80 81       	ld	r24, Z
 2e0:	80 93 61 00 	sts	0x0061, r24
 2e4:	80 e6       	ldi	r24, 0x60	; 96
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	c4 df       	rcall	.-120    	; 0x272 <can_transmit>
 2ea:	08 95       	ret
 2ec:	81 30       	cpi	r24, 0x01	; 1
 2ee:	49 f4       	brne	.+18     	; 0x302 <can_handler+0x60>
 2f0:	85 81       	ldd	r24, Z+5	; 0x05
 2f2:	88 23       	and	r24, r24
 2f4:	19 f4       	brne	.+6      	; 0x2fc <can_handler+0x5a>
 2f6:	86 81       	ldd	r24, Z+6	; 0x06
 2f8:	0c d0       	rcall	.+24     	; 0x312 <lights_set_raw>
 2fa:	08 95       	ret
 2fc:	85 b3       	in	r24, 0x15	; 21
 2fe:	80 7f       	andi	r24, 0xF0	; 240
 300:	85 bb       	out	0x15, r24	; 21
 302:	08 95       	ret

00000304 <lights_init>:
 304:	84 b3       	in	r24, 0x14	; 20
 306:	8f 60       	ori	r24, 0x0F	; 15
 308:	84 bb       	out	0x14, r24	; 20
 30a:	85 b3       	in	r24, 0x15	; 21
 30c:	8f 60       	ori	r24, 0x0F	; 15
 30e:	85 bb       	out	0x15, r24	; 21
 310:	08 95       	ret

00000312 <lights_set_raw>:
 312:	25 b3       	in	r18, 0x15	; 21
 314:	98 2f       	mov	r25, r24
 316:	90 6f       	ori	r25, 0xF0	; 240
 318:	92 23       	and	r25, r18
 31a:	95 bb       	out	0x15, r25	; 21
 31c:	95 b3       	in	r25, 0x15	; 21
 31e:	8f 70       	andi	r24, 0x0F	; 15
 320:	98 2b       	or	r25, r24
 322:	95 bb       	out	0x15, r25	; 21
 324:	08 95       	ret

00000326 <_exit>:
 326:	f8 94       	cli

00000328 <__stop_program>:
 328:	ff cf       	rjmp	.-2      	; 0x328 <__stop_program>
