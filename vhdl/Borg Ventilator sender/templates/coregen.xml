<?xml version="1.0" encoding="UTF-8"?>
<RootFolder label="COREGEN" treetype="folder" language="COREGEN">
	<Folder label="VERILOG Component Instantiation" treetype="folder">
		<Template label="encoder_b8b10b" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
encoder_b8b10b YourInstanceName (
    .din(din), // Bus [7 : 0] 
    .kin(kin),
    .clk(clk),
    .dout(dout), // Bus [9 : 0] 
    .ce(ce));

 
		</Template>
		<Template label="decoder_b8b10b" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
decoder_b8b10b YourInstanceName (
    .clk(clk),
    .din(din), // Bus [9 : 0] 
    .dout(dout), // Bus [7 : 0] 
    .kout(kout),
    .ce(ce),
    .code_err(code_err));

 
		</Template>
		<Template label="korrekturdaten" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
korrekturdaten YourInstanceName (
    .addra(addra), // Bus [7 : 0] 
    .addrb(addrb), // Bus [7 : 0] 
    .clka(clka),
    .clkb(clkb),
    .dinb(dinb), // Bus [2 : 0] 
    .douta(douta), // Bus [2 : 0] 
    .doutb(doutb), // Bus [2 : 0] 
    .web(web));

 
		</Template>
		<Template label="korrekturdaten1" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
korrekturdaten1 YourInstanceName (
    .addra(addra), // Bus [7 : 0] 
    .addrb(addrb), // Bus [7 : 0] 
    .clka(clka),
    .clkb(clkb),
    .dinb(dinb), // Bus [2 : 0] 
    .douta(douta), // Bus [2 : 0] 
    .doutb(doutb), // Bus [2 : 0] 
    .web(web));

 
		</Template>
		<Template label="korrekturdaten2" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
korrekturdaten2 YourInstanceName (
    .addra(addra), // Bus [7 : 0] 
    .addrb(addrb), // Bus [7 : 0] 
    .clka(clka),
    .clkb(clkb),
    .dinb(dinb), // Bus [2 : 0] 
    .douta(douta), // Bus [2 : 0] 
    .doutb(doutb), // Bus [2 : 0] 
    .web(web));

 
		</Template>
		<Template label="korrekturdaten4" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
korrekturdaten4 YourInstanceName (
    .addra(addra), // Bus [7 : 0] 
    .addrb(addrb), // Bus [7 : 0] 
    .clka(clka),
    .clkb(clkb),
    .dinb(dinb), // Bus [2 : 0] 
    .douta(douta), // Bus [2 : 0] 
    .doutb(doutb), // Bus [2 : 0] 
    .web(web));

 
		</Template>
		<Template label="korrekturdaten3" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
korrekturdaten3 YourInstanceName (
    .addra(addra), // Bus [7 : 0] 
    .addrb(addrb), // Bus [7 : 0] 
    .clka(clka),
    .clkb(clkb),
    .dinb(dinb), // Bus [2 : 0] 
    .douta(douta), // Bus [2 : 0] 
    .doutb(doutb), // Bus [2 : 0] 
    .web(web));

 
		</Template>
	</Folder>
	<Folder label="VHDL Component Instantiation" treetype="folder">
		<Template label="encoder_b8b10b" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component encoder_b8b10b
    port (
    din: IN std_logic_VECTOR(7 downto 0);
    kin: IN std_logic;
    clk: IN std_logic;
    dout: OUT std_logic_VECTOR(9 downto 0);
    ce: IN std_logic);
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : encoder_b8b10b
        port map (
            din =&gt; din,
            kin =&gt; kin,
            clk =&gt; clk,
            dout =&gt; dout,
            ce =&gt; ce);
 
		</Template>
		<Template label="decoder_b8b10b" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component decoder_b8b10b
    port (
    clk: IN std_logic;
    din: IN std_logic_VECTOR(9 downto 0);
    dout: OUT std_logic_VECTOR(7 downto 0);
    kout: OUT std_logic;
    ce: IN std_logic;
    code_err: OUT std_logic);
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : decoder_b8b10b
        port map (
            clk =&gt; clk,
            din =&gt; din,
            dout =&gt; dout,
            kout =&gt; kout,
            ce =&gt; ce,
            code_err =&gt; code_err);
 
		</Template>
		<Template label="korrekturdaten" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component korrekturdaten
    port (
    addra: IN std_logic_VECTOR(7 downto 0);
    addrb: IN std_logic_VECTOR(7 downto 0);
    clka: IN std_logic;
    clkb: IN std_logic;
    dinb: IN std_logic_VECTOR(2 downto 0);
    douta: OUT std_logic_VECTOR(2 downto 0);
    doutb: OUT std_logic_VECTOR(2 downto 0);
    web: IN std_logic);
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : korrekturdaten
        port map (
            addra =&gt; addra,
            addrb =&gt; addrb,
            clka =&gt; clka,
            clkb =&gt; clkb,
            dinb =&gt; dinb,
            douta =&gt; douta,
            doutb =&gt; doutb,
            web =&gt; web);
 
		</Template>
		<Template label="korrekturdaten1" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component korrekturdaten1
    port (
    addra: IN std_logic_VECTOR(7 downto 0);
    addrb: IN std_logic_VECTOR(7 downto 0);
    clka: IN std_logic;
    clkb: IN std_logic;
    dinb: IN std_logic_VECTOR(2 downto 0);
    douta: OUT std_logic_VECTOR(2 downto 0);
    doutb: OUT std_logic_VECTOR(2 downto 0);
    web: IN std_logic);
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : korrekturdaten1
        port map (
            addra =&gt; addra,
            addrb =&gt; addrb,
            clka =&gt; clka,
            clkb =&gt; clkb,
            dinb =&gt; dinb,
            douta =&gt; douta,
            doutb =&gt; doutb,
            web =&gt; web);
 
		</Template>
		<Template label="korrekturdaten2" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component korrekturdaten2
    port (
    addra: IN std_logic_VECTOR(7 downto 0);
    addrb: IN std_logic_VECTOR(7 downto 0);
    clka: IN std_logic;
    clkb: IN std_logic;
    dinb: IN std_logic_VECTOR(2 downto 0);
    douta: OUT std_logic_VECTOR(2 downto 0);
    doutb: OUT std_logic_VECTOR(2 downto 0);
    web: IN std_logic);
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : korrekturdaten2
        port map (
            addra =&gt; addra,
            addrb =&gt; addrb,
            clka =&gt; clka,
            clkb =&gt; clkb,
            dinb =&gt; dinb,
            douta =&gt; douta,
            doutb =&gt; doutb,
            web =&gt; web);
 
		</Template>
		<Template label="korrekturdaten4" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component korrekturdaten4
    port (
    addra: IN std_logic_VECTOR(7 downto 0);
    addrb: IN std_logic_VECTOR(7 downto 0);
    clka: IN std_logic;
    clkb: IN std_logic;
    dinb: IN std_logic_VECTOR(2 downto 0);
    douta: OUT std_logic_VECTOR(2 downto 0);
    doutb: OUT std_logic_VECTOR(2 downto 0);
    web: IN std_logic);
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : korrekturdaten4
        port map (
            addra =&gt; addra,
            addrb =&gt; addrb,
            clka =&gt; clka,
            clkb =&gt; clkb,
            dinb =&gt; dinb,
            douta =&gt; douta,
            doutb =&gt; doutb,
            web =&gt; web);
 
		</Template>
		<Template label="korrekturdaten3" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component korrekturdaten3
    port (
    addra: IN std_logic_VECTOR(7 downto 0);
    addrb: IN std_logic_VECTOR(7 downto 0);
    clka: IN std_logic;
    clkb: IN std_logic;
    dinb: IN std_logic_VECTOR(2 downto 0);
    douta: OUT std_logic_VECTOR(2 downto 0);
    doutb: OUT std_logic_VECTOR(2 downto 0);
    web: IN std_logic);
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : korrekturdaten3
        port map (
            addra =&gt; addra,
            addrb =&gt; addrb,
            clka =&gt; clka,
            clkb =&gt; clkb,
            dinb =&gt; dinb,
            douta =&gt; douta,
            doutb =&gt; doutb,
            web =&gt; web);
 
		</Template>
	</Folder>
</RootFolder>
