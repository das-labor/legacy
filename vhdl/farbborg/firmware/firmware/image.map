Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_mulhi3.o)
                              api.o (__mulhi3)
/usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_udivmodqi4.o)
                              testAnim.o (__udivmodqi4)
/usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_divmodhi4.o)
                              api.o (__divmodhi4)
/usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_exit.o)
                              main.o (exit)
/usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/libc.a(itoa.o)
                              uart.o (itoa)
/usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/libc.a(itoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

imag                0x177             api.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/crtm103.o
LOAD main.o
LOAD uart.o
LOAD util.o
LOAD api.o
LOAD testAnim.o
LOAD /usr/lib/gcc/avr/4.1.0/avr3/libgcc.a
LOAD /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/libc.a
LOAD /usr/lib/gcc/avr/4.1.0/avr3/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x2dec
 *(.vectors)
 .vectors       0x00000000       0x60 /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/crtm103.o
                0x00000000                __vectors
                0x00000000                __vector_default
                0x00000060                __ctors_start = .
 *(.ctors)
                0x00000060                __ctors_end = .
                0x00000060                __dtors_start = .
 *(.dtors)
                0x00000060                __dtors_end = .
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000060        0xe main.o
 .progmem.data  0x0000006e        0x3 uart.o
                0x00000072                . = ALIGN (0x2)
 *fill*         0x00000071        0x1 00
 *(.init0)
 *(.init1)
 *(.init2)
 .init2         0x00000072        0xc /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/crtm103.o
 *(.init3)
 *(.init4)
 .init4         0x0000007e       0x20 /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/crtm103.o
                0x0000007e                __do_copy_data
 .init4         0x0000009e       0x10 /usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_clear_bss.o)
                0x0000009e                __do_clear_bss
 *(.init5)
 *(.init6)
 *(.init7)
 *(.init8)
 *(.init9)
 .init9         0x000000ae        0x4 /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/crtm103.o
 *(.text)
 .text          0x000000b2        0x4 /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/crtm103.o
                0x000000b2                __vector_22
                0x000000b2                __vector_1
                0x000000b2                __vector_12
                0x000000b2                __bad_interrupt
                0x000000b2                __vector_6
                0x000000b2                __vector_3
                0x000000b2                __vector_23
                0x000000b2                __vector_11
                0x000000b2                __vector_13
                0x000000b2                __vector_17
                0x000000b2                __vector_19
                0x000000b2                __vector_7
                0x000000b2                __vector_5
                0x000000b2                __vector_4
                0x000000b2                __vector_9
                0x000000b2                __vector_2
                0x000000b2                __vector_21
                0x000000b2                __vector_15
                0x000000b2                __vector_8
                0x000000b2                __vector_14
                0x000000b2                __vector_10
                0x000000b2                __vector_16
                0x000000b2                __vector_18
                0x000000b2                __vector_20
 .text          0x000000b6       0x7c main.o
                0x000000b6                main
 .text          0x00000132      0x118 uart.o
                0x0000016a                uart_putstr
                0x00000132                uart_init
                0x00000144                uart_getc
                0x0000013c                uart_putc
                0x00000198                uart_hexdump
                0x00000180                uart_putstr_P
                0x00000152                uart_getc_nb
 .text          0x0000024a       0x24 util.o
                0x0000024a                wait
 .text          0x0000026e      0xa2e api.o
                0x000007fc                shift
                0x0000026e                setVoxel
                0x00000306                setSymetricVoxel
                0x00000a44                swapAndWait
                0x00000658                direction_r
                0x000005d4                getNextVoxel
                0x0000073c                clearImage
                0x00000848                drawLine3D
                0x00000516                isVoxelSet
                0x0000069e                clearScreen
                0x00000a8e                fade
                0x00000782                easyRandom
 .text          0x00000c9c     0x2052 testAnim.o
                0x0000294c                movingArrows
                0x0000195c                snake
                0x00001246                fnordLicht
                0x00000ecc                brightnesTest
                0x00000e20                test1
                0x00002c0e                symetricRandom
                0x0000158a                funkyBeat
                0x00001e44                planeBall
                0x000025b8                spirale
                0x000012f8                testAnim
                0x00002ae6                symetricRoutes
                0x00000e1e                glowingBobbles
                0x000017c0                movingCubes
                0x00002cb8                display_loop
                0x00001012                wobbeln
                0x00002808                upgoingRandom
 .text          0x00002cee       0x4a /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/libc.a(itoa.o)
                0x00002cee                itoa
 .text          0x00002d38       0x24 /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/libc.a(strrev.o)
                0x00002d38                strrev
                0x00002d5c                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00002d5c       0x24 /usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_mulhi3.o)
                0x00002d5c                __mulhi3
 .text.libgcc   0x00002d80       0x18 /usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_udivmodqi4.o)
                0x00002d80                __udivmodqi4
 .text.libgcc   0x00002d98       0x26 /usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_divmodhi4.o)
                0x00002d98                __divmodhi4
                0x00002d98                _div
 .text.libgcc   0x00002dbe       0x2c /usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_udivmodhi4.o)
                0x00002dbe                __udivmodhi4
                0x00002dea                . = ALIGN (0x2)
 *(.fini9)
 *(.fini8)
 *(.fini7)
 *(.fini6)
 *(.fini5)
 *(.fini4)
 *(.fini3)
 *(.fini2)
 *(.fini1)
 *(.fini0)
 .fini0         0x00002dea        0x2 /usr/lib/gcc/avr/4.1.0/avr3/libgcc.a(_exit.o)
                0x00002dec                _etext = .

.data           0x00800060      0x136 load address 0x00002dec
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0xe api.o
                0x00800069                blue
                0x00800066                green
                0x00800063                red
                0x00800060                white
 .data          0x0080006e      0x127 testAnim.o
 *(.gnu.linkonce.d*)
                0x00800196                . = ALIGN (0x2)
 *fill*         0x00800195        0x1 00
                0x00800196                _edata = .
                0x00800196                PROVIDE (__data_end, .)

.bss            0x00800196      0x17a
                0x00800196                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800196        0x3 api.o
                0x00800196                black
 *(COMMON)
 COMMON         0x00800199      0x177 api.o
                0x00800199                imag
                0x00800310                PROVIDE (__bss_end, .)
                0x00002dec                __data_load_start = LOADADDR (.data)
                0x00002f22                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800310        0x0
                0x00800310                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800310                PROVIDE (__noinit_end, .)
                0x00800310                _end = .
                0x00800310                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000     0x3fa8
 *(.stab)
 .stab          0x00000000      0x42c /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/crtm103.o
 .stab          0x0000042c      0x4d4 main.o
                                0x4e0 (size before relaxing)
 .stab          0x00000900      0x564 uart.o
                                0x798 (size before relaxing)
 .stab          0x00000e64      0x198 util.o
                                0x33c (size before relaxing)
 .stab          0x00000ffc      0xf48 api.o
                               0x11d0 (size before relaxing)
 .stab          0x00001f44     0x1ddc testAnim.o
                               0x1e24 (size before relaxing)
 .stab          0x00003d20      0x1b0 /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x00003ed0       0xd8 /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000     0x1622
 *(.stabstr)
 .stabstr       0x00000000     0x1622 /usr/lib/gcc/avr/4.1.0/../../../../avr/lib/avr3/crtm103.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(image.elf elf32-avr)
