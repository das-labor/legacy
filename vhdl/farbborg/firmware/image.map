Archive member included because of file (symbol)

/usr/lib/gcc/avr/3.4.3/avr3/libgcc.a(_clear_bss.o)
                              bootloader.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/3.4.3/../../../../avr/lib/avr3/crtm103.o
Address of section .bootloader set to 0x1f000
Address of section .progdata set to 0x1ff00
LOAD bootloader.o
LOAD uart.o
LOAD /tmp/ccYsA3eu.o
LOAD /usr/lib/gcc/avr/3.4.3/avr3/libgcc.a
LOAD /usr/lib/gcc/avr/3.4.3/../../../../avr/lib/avr3/libc.a
LOAD /usr/lib/gcc/avr/3.4.3/avr3/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000       0xae
 *(.vectors)
 .vectors       0x00000000       0x60 /usr/lib/gcc/avr/3.4.3/../../../../avr/lib/avr3/crtm103.o
                0x00000000                __vectors
                0x00000000                __vector_default
                0x00000060                __ctors_start = .
 *(.ctors)
                0x00000060                __ctors_end = .
                0x00000060                __dtors_start = .
 *(.dtors)
                0x00000060                __dtors_end = .
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000060                . = ALIGN (0x2)
 *(.init0)
 *(.init1)
 *(.init2)
 .init2         0x00000060        0xc /usr/lib/gcc/avr/3.4.3/../../../../avr/lib/avr3/crtm103.o
 *(.init3)
 *(.init4)
 .init4         0x0000006c       0x20 /usr/lib/gcc/avr/3.4.3/../../../../avr/lib/avr3/crtm103.o
                0x0000006c                __do_copy_data
 .init4         0x0000008c       0x10 /usr/lib/gcc/avr/3.4.3/avr3/libgcc.a(_clear_bss.o)
                0x0000008c                __do_clear_bss
 *(.init5)
 *(.init6)
 *(.init7)
 *(.init8)
 *(.init9)
 .init9         0x0000009c        0x4 /usr/lib/gcc/avr/3.4.3/../../../../avr/lib/avr3/crtm103.o
 *(.text)
 .text          0x000000a0        0x4 /usr/lib/gcc/avr/3.4.3/../../../../avr/lib/avr3/crtm103.o
                0x000000a0                __vector_22
                0x000000a0                __vector_1
                0x000000a0                __vector_12
                0x000000a0                __bad_interrupt
                0x000000a0                __vector_6
                0x000000a0                __vector_3
                0x000000a0                __vector_23
                0x000000a0                __vector_11
                0x000000a0                __vector_13
                0x000000a0                __vector_17
                0x000000a0                __vector_19
                0x000000a0                __vector_7
                0x000000a0                __vector_5
                0x000000a0                __vector_4
                0x000000a0                __vector_9
                0x000000a0                __vector_2
                0x000000a0                __vector_21
                0x000000a0                __vector_15
                0x000000a0                __vector_8
                0x000000a0                __vector_14
                0x000000a0                __vector_10
                0x000000a0                __vector_16
                0x000000a0                __vector_18
                0x000000a0                __vector_20
 .text          0x000000a4        0xa /tmp/ccYsA3eu.o
                0x000000a4                main
                0x000000ae                . = ALIGN (0x2)
 *(.text.*)
                0x000000ae                . = ALIGN (0x2)
 *(.fini9)
 *(.fini8)
 *(.fini7)
 *(.fini6)
 *(.fini5)
 *(.fini4)
 *(.fini3)
 *(.fini2)
 *(.fini1)
 *(.fini0)
                0x000000ae                _etext = .

.data           0x00800060        0x0 load address 0x000000ae
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x0
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 *(COMMON)
                0x00800060                PROVIDE (__bss_end, .)
                0x000000ae                __data_load_start = LOADADDR (.data)
                0x000000ae                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800060        0x0
                0x00800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800060                PROVIDE (__noinit_end, .)
                0x00800060                _end = .
                0x00800060                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0 load address 0x000000ae
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000      0xe4c
 *(.stab)
 .stab          0x00000000      0x360 /usr/lib/gcc/avr/3.4.3/../../../../avr/lib/avr3/crtm103.o
 .stab          0x00000360      0x51c bootloader.o
                                0x528 (size before relaxing)
 .stab          0x0000087c      0x474 uart.o
                                0x5c4 (size before relaxing)
 .stab          0x00000cf0      0x15c /tmp/ccYsA3eu.o
                                0x168 (size before relaxing)

.stabstr        0x00000000      0xa6e
 *(.stabstr)
 .stabstr       0x00000000      0xa6e /usr/lib/gcc/avr/3.4.3/../../../../avr/lib/avr3/crtm103.o
                                  0x0 (size before relaxing)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(image.elf elf32-avr)

.bootloader     0x0001f000      0x20a
 .bootloader    0x0001f000      0x16a bootloader.o
                0x0001f000                bootloader
 .bootloader    0x0001f16a       0xa0 uart.o
                0x0001f17c                uart_putstr
                0x0001f16a                uart_init
                0x0001f1c8                uart_getc
                0x0001f174                uart_putc
                0x0001f19c                uart_putstr_P
                0x0001f1d6                uart_getc_nb
                0x0001f1f0                getword

.progdata       0x0001ff00        0x0
