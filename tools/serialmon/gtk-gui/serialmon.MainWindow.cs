// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace serialmon {
    
    
    public partial class MainWindow {
        
        private Gtk.VBox vbox2;
        
        private Gtk.ScrolledWindow GtkScrolledWindow;
        
        private Gtk.TextView textview1;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Button aboutButton;
        
        private Gtk.Button configButton;
        
        private Gtk.Button clearButton;
        
        private Gtk.Button mainButton;
        
        private Gtk.Statusbar statusbar2;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget serialmon.MainWindow
            this.Name = "serialmon.MainWindow";
            this.Title = Mono.Unix.Catalog.GetString("serialMon");
            this.Icon = Stetic.IconLoader.LoadIcon(this, "gtk-zoom-fit", Gtk.IconSize.Menu, 16);
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.BorderWidth = ((uint)(3));
            // Container child serialmon.MainWindow.Gtk.Container+ContainerChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 6;
            // Container child vbox2.Gtk.Box+BoxChild
            this.GtkScrolledWindow = new Gtk.ScrolledWindow();
            this.GtkScrolledWindow.Name = "GtkScrolledWindow";
            this.GtkScrolledWindow.ShadowType = ((Gtk.ShadowType)(1));
            // Container child GtkScrolledWindow.Gtk.Container+ContainerChild
            this.textview1 = new Gtk.TextView();
            this.textview1.CanFocus = true;
            this.textview1.ExtensionEvents = ((Gdk.ExtensionMode)(1));
            this.textview1.Name = "textview1";
            this.textview1.Editable = false;
            this.GtkScrolledWindow.Add(this.textview1);
            this.vbox2.Add(this.GtkScrolledWindow);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox2[this.GtkScrolledWindow]));
            w2.Position = 0;
            // Container child vbox2.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.aboutButton = new Gtk.Button();
            this.aboutButton.CanFocus = true;
            this.aboutButton.Name = "aboutButton";
            this.aboutButton.UseUnderline = true;
            this.aboutButton.Label = Mono.Unix.Catalog.GetString("about");
            this.hbox1.Add(this.aboutButton);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.hbox1[this.aboutButton]));
            w3.Position = 0;
            w3.Expand = false;
            w3.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.configButton = new Gtk.Button();
            this.configButton.CanFocus = true;
            this.configButton.Name = "configButton";
            this.configButton.UseUnderline = true;
            this.configButton.Label = Mono.Unix.Catalog.GetString("Config");
            this.hbox1.Add(this.configButton);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.hbox1[this.configButton]));
            w4.Position = 1;
            w4.Expand = false;
            w4.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.clearButton = new Gtk.Button();
            this.clearButton.CanFocus = true;
            this.clearButton.Name = "clearButton";
            this.clearButton.UseUnderline = true;
            this.clearButton.Label = Mono.Unix.Catalog.GetString("clear");
            this.hbox1.Add(this.clearButton);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.hbox1[this.clearButton]));
            w5.Position = 2;
            w5.Expand = false;
            w5.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.mainButton = new Gtk.Button();
            this.mainButton.CanFocus = true;
            this.mainButton.Name = "mainButton";
            this.mainButton.UseUnderline = true;
            this.mainButton.Label = Mono.Unix.Catalog.GetString("connect");
            this.hbox1.Add(this.mainButton);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox1[this.mainButton]));
            w6.Position = 3;
            w6.Expand = false;
            w6.Fill = false;
            this.vbox2.Add(this.hbox1);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.vbox2[this.hbox1]));
            w7.Position = 1;
            w7.Expand = false;
            w7.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.statusbar2 = new Gtk.Statusbar();
            this.statusbar2.Name = "statusbar2";
            this.statusbar2.Spacing = 6;
            this.vbox2.Add(this.statusbar2);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.vbox2[this.statusbar2]));
            w8.Position = 2;
            w8.Expand = false;
            w8.Fill = false;
            this.Add(this.vbox2);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 448;
            this.DefaultHeight = 300;
            this.Show();
            this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
            this.textview1.SizeAllocated += new Gtk.SizeAllocatedHandler(this.OnTextview);
            this.aboutButton.Released += new System.EventHandler(this.OnAboutButtonReleased);
            this.configButton.Released += new System.EventHandler(this.OnConfigButtonReleased);
            this.clearButton.Released += new System.EventHandler(this.OnClearButtonReleased);
            this.mainButton.Released += new System.EventHandler(this.OnMainButtonReleased);
        }
    }
}
