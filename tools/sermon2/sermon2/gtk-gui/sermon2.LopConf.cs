// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace sermon2 {
    
    
    public partial class LopConf {
        
        private Gtk.Frame frame1;
        
        private Gtk.Alignment GtkAlignment;
        
        private Gtk.Table table1;
        
        private Gtk.Label escValueLabel;
        
        private Gtk.Button removeButton;
        
        private Gtk.Label resetValueLabel;
        
        private Gtk.SpinButton spinbutton1;
        
        private Gtk.SpinButton spinbutton2;
        
        private Gtk.CheckButton violationCheckButton;
        
        private Gtk.Label frameLabel;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget sermon2.LopConf
            Stetic.BinContainer.Attach(this);
            this.Name = "sermon2.LopConf";
            // Container child sermon2.LopConf.Gtk.Container+ContainerChild
            this.frame1 = new Gtk.Frame();
            this.frame1.Name = "frame1";
            this.frame1.ShadowType = ((Gtk.ShadowType)(1));
            // Container child frame1.Gtk.Container+ContainerChild
            this.GtkAlignment = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment.Name = "GtkAlignment";
            this.GtkAlignment.LeftPadding = ((uint)(12));
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            this.table1 = new Gtk.Table(((uint)(2)), ((uint)(3)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.escValueLabel = new Gtk.Label();
            this.escValueLabel.Name = "escValueLabel";
            this.escValueLabel.LabelProp = Mono.Unix.Catalog.GetString("escape code");
            this.table1.Add(this.escValueLabel);
            Gtk.Table.TableChild w1 = ((Gtk.Table.TableChild)(this.table1[this.escValueLabel]));
            w1.TopAttach = ((uint)(1));
            w1.BottomAttach = ((uint)(2));
            w1.XOptions = ((Gtk.AttachOptions)(4));
            w1.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.removeButton = new Gtk.Button();
            this.removeButton.CanFocus = true;
            this.removeButton.Name = "removeButton";
            this.removeButton.UseUnderline = true;
            // Container child removeButton.Gtk.Container+ContainerChild
            Gtk.Alignment w2 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w3 = new Gtk.HBox();
            w3.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w4 = new Gtk.Image();
            w4.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-delete", Gtk.IconSize.Menu, 16);
            w3.Add(w4);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w6 = new Gtk.Label();
            w6.LabelProp = Mono.Unix.Catalog.GetString("remove");
            w6.UseUnderline = true;
            w3.Add(w6);
            w2.Add(w3);
            this.removeButton.Add(w2);
            this.table1.Add(this.removeButton);
            Gtk.Table.TableChild w10 = ((Gtk.Table.TableChild)(this.table1[this.removeButton]));
            w10.TopAttach = ((uint)(1));
            w10.BottomAttach = ((uint)(2));
            w10.LeftAttach = ((uint)(2));
            w10.RightAttach = ((uint)(3));
            w10.XOptions = ((Gtk.AttachOptions)(4));
            w10.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.resetValueLabel = new Gtk.Label();
            this.resetValueLabel.Name = "resetValueLabel";
            this.resetValueLabel.LabelProp = Mono.Unix.Catalog.GetString("reset code");
            this.table1.Add(this.resetValueLabel);
            Gtk.Table.TableChild w11 = ((Gtk.Table.TableChild)(this.table1[this.resetValueLabel]));
            w11.XOptions = ((Gtk.AttachOptions)(4));
            w11.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.spinbutton1 = new Gtk.SpinButton(0, 255, 1);
            this.spinbutton1.CanFocus = true;
            this.spinbutton1.Name = "spinbutton1";
            this.spinbutton1.Adjustment.PageIncrement = 10;
            this.spinbutton1.ClimbRate = 1;
            this.spinbutton1.Numeric = true;
            this.spinbutton1.Value = 66;
            this.spinbutton1.Wrap = true;
            this.table1.Add(this.spinbutton1);
            Gtk.Table.TableChild w12 = ((Gtk.Table.TableChild)(this.table1[this.spinbutton1]));
            w12.LeftAttach = ((uint)(1));
            w12.RightAttach = ((uint)(2));
            w12.XOptions = ((Gtk.AttachOptions)(4));
            w12.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.spinbutton2 = new Gtk.SpinButton(0, 255, 1);
            this.spinbutton2.CanFocus = true;
            this.spinbutton2.Name = "spinbutton2";
            this.spinbutton2.Adjustment.PageIncrement = 10;
            this.spinbutton2.ClimbRate = 1;
            this.spinbutton2.Numeric = true;
            this.spinbutton2.Value = 35;
            this.spinbutton2.Wrap = true;
            this.table1.Add(this.spinbutton2);
            Gtk.Table.TableChild w13 = ((Gtk.Table.TableChild)(this.table1[this.spinbutton2]));
            w13.TopAttach = ((uint)(1));
            w13.BottomAttach = ((uint)(2));
            w13.LeftAttach = ((uint)(1));
            w13.RightAttach = ((uint)(2));
            w13.XOptions = ((Gtk.AttachOptions)(4));
            w13.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.violationCheckButton = new Gtk.CheckButton();
            this.violationCheckButton.CanFocus = true;
            this.violationCheckButton.Name = "violationCheckButton";
            this.violationCheckButton.Label = Mono.Unix.Catalog.GetString("report violations");
            this.violationCheckButton.DrawIndicator = true;
            this.violationCheckButton.UseUnderline = true;
            this.table1.Add(this.violationCheckButton);
            Gtk.Table.TableChild w14 = ((Gtk.Table.TableChild)(this.table1[this.violationCheckButton]));
            w14.LeftAttach = ((uint)(2));
            w14.RightAttach = ((uint)(3));
            w14.XOptions = ((Gtk.AttachOptions)(4));
            w14.YOptions = ((Gtk.AttachOptions)(4));
            this.GtkAlignment.Add(this.table1);
            this.frame1.Add(this.GtkAlignment);
            this.frameLabel = new Gtk.Label();
            this.frameLabel.Name = "frameLabel";
            this.frameLabel.LabelProp = Mono.Unix.Catalog.GetString("<b>frame1</b>");
            this.frameLabel.UseMarkup = true;
            this.frame1.LabelWidget = this.frameLabel;
            this.Add(this.frame1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
            this.removeButton.Released += new System.EventHandler(this.OnRemoveButtonReleased);
        }
    }
}
