// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace sermon2 {
    
    
    public partial class ConfSelect {
        
        private Gtk.Alignment alignment1;
        
        private Gtk.ComboBox combobox2;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget sermon2.ConfSelect
            this.Name = "sermon2.ConfSelect";
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.HasSeparator = false;
            // Internal child sermon2.ConfSelect.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.alignment1 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment1.Name = "alignment1";
            // Container child alignment1.Gtk.Container+ContainerChild
            this.combobox2 = Gtk.ComboBox.NewText();
            this.combobox2.AppendText(Mono.Unix.Catalog.GetString("serial port"));
            this.combobox2.AppendText(Mono.Unix.Catalog.GetString("tagger"));
            this.combobox2.AppendText(Mono.Unix.Catalog.GetString("lop"));
            this.combobox2.AppendText(Mono.Unix.Catalog.GetString("qport"));
            this.combobox2.AppendText(Mono.Unix.Catalog.GetString("streamview"));
            this.combobox2.AppendText(Mono.Unix.Catalog.GetString("lopview"));
            this.combobox2.Name = "combobox2";
            this.combobox2.Active = 0;
            this.alignment1.Add(this.combobox2);
            w1.Add(this.alignment1);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(w1[this.alignment1]));
            w3.Position = 0;
            w3.Expand = false;
            w3.Fill = false;
            // Internal child sermon2.ConfSelect.ActionArea
            Gtk.HButtonBox w4 = this.ActionArea;
            w4.Name = "dialog1_ActionArea";
            w4.Spacing = 6;
            w4.BorderWidth = ((uint)(5));
            w4.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w5 = ((Gtk.ButtonBox.ButtonBoxChild)(w4[this.buttonCancel]));
            w5.Expand = false;
            w5.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w6 = ((Gtk.ButtonBox.ButtonBoxChild)(w4[this.buttonOk]));
            w6.Position = 1;
            w6.Expand = false;
            w6.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 267;
            this.DefaultHeight = 300;
            this.Show();
            this.buttonCancel.Released += new System.EventHandler(this.OnButtonCancelReleased);
            this.buttonOk.Released += new System.EventHandler(this.OnButtonOkReleased);
        }
    }
}
