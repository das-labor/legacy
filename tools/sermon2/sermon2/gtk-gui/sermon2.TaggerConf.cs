// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace sermon2 {
    
    
    public partial class TaggerConf {
        
        private Gtk.Frame frame1;
        
        private Gtk.Alignment GtkAlignment;
        
        private Gtk.VBox vbox3;
        
        private Gtk.Table table1;
        
        private Gtk.ColorButton backgroundCButton;
        
        private Gtk.CheckButton backgroundCheckButton;
        
        private Gtk.ColorButton foregroundCButton;
        
        private Gtk.CheckButton foregroundCheckButton;
        
        private Gtk.CheckButton dataCheckButton;
        
        private Gtk.Frame frame2;
        
        private Gtk.Alignment GtkAlignment5;
        
        private Gtk.VBox vbox1;
        
        private Gtk.VBox vbox2;
        
        private Gtk.HBox hbox2;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Label valueLabel;
        
        private Gtk.SpinButton valueSpinButton;
        
        private Gtk.Button addTaggerDataConfbutton;
        
        private Gtk.Label GtkLabel5;
        
        private Gtk.Label nameLabel;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget sermon2.TaggerConf
            Stetic.BinContainer.Attach(this);
            this.Name = "sermon2.TaggerConf";
            // Container child sermon2.TaggerConf.Gtk.Container+ContainerChild
            this.frame1 = new Gtk.Frame();
            this.frame1.Name = "frame1";
            this.frame1.ShadowType = ((Gtk.ShadowType)(1));
            // Container child frame1.Gtk.Container+ContainerChild
            this.GtkAlignment = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment.Name = "GtkAlignment";
            this.GtkAlignment.LeftPadding = ((uint)(12));
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            this.vbox3 = new Gtk.VBox();
            this.vbox3.Name = "vbox3";
            this.vbox3.Spacing = 6;
            // Container child vbox3.Gtk.Box+BoxChild
            this.table1 = new Gtk.Table(((uint)(2)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.backgroundCButton = new Gtk.ColorButton();
            this.backgroundCButton.CanFocus = true;
            this.backgroundCButton.Events = ((Gdk.EventMask)(784));
            this.backgroundCButton.Name = "backgroundCButton";
            this.table1.Add(this.backgroundCButton);
            Gtk.Table.TableChild w1 = ((Gtk.Table.TableChild)(this.table1[this.backgroundCButton]));
            w1.TopAttach = ((uint)(1));
            w1.BottomAttach = ((uint)(2));
            w1.LeftAttach = ((uint)(1));
            w1.RightAttach = ((uint)(2));
            w1.XOptions = ((Gtk.AttachOptions)(0));
            w1.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.backgroundCheckButton = new Gtk.CheckButton();
            this.backgroundCheckButton.CanFocus = true;
            this.backgroundCheckButton.Name = "backgroundCheckButton";
            this.backgroundCheckButton.Label = Mono.Unix.Catalog.GetString("background");
            this.backgroundCheckButton.DrawIndicator = true;
            this.backgroundCheckButton.UseUnderline = true;
            this.table1.Add(this.backgroundCheckButton);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this.backgroundCheckButton]));
            w2.TopAttach = ((uint)(1));
            w2.BottomAttach = ((uint)(2));
            w2.XOptions = ((Gtk.AttachOptions)(4));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.foregroundCButton = new Gtk.ColorButton();
            this.foregroundCButton.CanFocus = true;
            this.foregroundCButton.Events = ((Gdk.EventMask)(784));
            this.foregroundCButton.Name = "foregroundCButton";
            this.table1.Add(this.foregroundCButton);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this.foregroundCButton]));
            w3.LeftAttach = ((uint)(1));
            w3.RightAttach = ((uint)(2));
            w3.XOptions = ((Gtk.AttachOptions)(0));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.foregroundCheckButton = new Gtk.CheckButton();
            this.foregroundCheckButton.CanFocus = true;
            this.foregroundCheckButton.Name = "foregroundCheckButton";
            this.foregroundCheckButton.Label = Mono.Unix.Catalog.GetString("foreground");
            this.foregroundCheckButton.DrawIndicator = true;
            this.foregroundCheckButton.UseUnderline = true;
            this.table1.Add(this.foregroundCheckButton);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this.foregroundCheckButton]));
            w4.XOptions = ((Gtk.AttachOptions)(4));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            this.vbox3.Add(this.table1);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox3[this.table1]));
            w5.Position = 0;
            w5.Expand = false;
            w5.Fill = false;
            // Container child vbox3.Gtk.Box+BoxChild
            this.dataCheckButton = new Gtk.CheckButton();
            this.dataCheckButton.CanFocus = true;
            this.dataCheckButton.Name = "dataCheckButton";
            this.dataCheckButton.Label = Mono.Unix.Catalog.GetString("data dependant");
            this.dataCheckButton.DrawIndicator = true;
            this.dataCheckButton.UseUnderline = true;
            this.vbox3.Add(this.dataCheckButton);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.vbox3[this.dataCheckButton]));
            w6.Position = 1;
            w6.Expand = false;
            w6.Fill = false;
            // Container child vbox3.Gtk.Box+BoxChild
            this.frame2 = new Gtk.Frame();
            this.frame2.Name = "frame2";
            this.frame2.ShadowType = ((Gtk.ShadowType)(1));
            this.frame2.BorderWidth = ((uint)(9));
            // Container child frame2.Gtk.Container+ContainerChild
            this.GtkAlignment5 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment5.Name = "GtkAlignment5";
            this.GtkAlignment5.LeftPadding = ((uint)(12));
            // Container child GtkAlignment5.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.Name = "vbox1";
            this.vbox1.Spacing = 6;
            // Container child vbox1.Gtk.Box+BoxChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 6;
            this.vbox2.BorderWidth = ((uint)(3));
            this.vbox1.Add(this.vbox2);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.vbox1[this.vbox2]));
            w7.Position = 0;
            // Container child vbox1.Gtk.Box+BoxChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.valueLabel = new Gtk.Label();
            this.valueLabel.Name = "valueLabel";
            this.valueLabel.LabelProp = Mono.Unix.Catalog.GetString("value");
            this.hbox1.Add(this.valueLabel);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.hbox1[this.valueLabel]));
            w8.Position = 0;
            w8.Expand = false;
            w8.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.valueSpinButton = new Gtk.SpinButton(-1, 255, 1);
            this.valueSpinButton.CanFocus = true;
            this.valueSpinButton.Name = "valueSpinButton";
            this.valueSpinButton.Adjustment.PageIncrement = 10;
            this.valueSpinButton.ClimbRate = 1;
            this.valueSpinButton.Numeric = true;
            this.valueSpinButton.Value = -1;
            this.valueSpinButton.Wrap = true;
            this.hbox1.Add(this.valueSpinButton);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(this.hbox1[this.valueSpinButton]));
            w9.Position = 1;
            w9.Expand = false;
            w9.Fill = false;
            this.hbox2.Add(this.hbox1);
            Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(this.hbox2[this.hbox1]));
            w10.Position = 0;
            w10.Expand = false;
            w10.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.addTaggerDataConfbutton = new Gtk.Button();
            this.addTaggerDataConfbutton.CanFocus = true;
            this.addTaggerDataConfbutton.Name = "addTaggerDataConfbutton";
            this.addTaggerDataConfbutton.UseUnderline = true;
            this.addTaggerDataConfbutton.BorderWidth = ((uint)(3));
            // Container child addTaggerDataConfbutton.Gtk.Container+ContainerChild
            Gtk.Alignment w11 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w12 = new Gtk.HBox();
            w12.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w13 = new Gtk.Image();
            w13.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-add", Gtk.IconSize.Menu, 16);
            w12.Add(w13);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w15 = new Gtk.Label();
            w15.LabelProp = Mono.Unix.Catalog.GetString("button1");
            w15.UseUnderline = true;
            w12.Add(w15);
            w11.Add(w12);
            this.addTaggerDataConfbutton.Add(w11);
            this.hbox2.Add(this.addTaggerDataConfbutton);
            Gtk.Box.BoxChild w19 = ((Gtk.Box.BoxChild)(this.hbox2[this.addTaggerDataConfbutton]));
            w19.Position = 1;
            w19.Expand = false;
            w19.Fill = false;
            this.vbox1.Add(this.hbox2);
            Gtk.Box.BoxChild w20 = ((Gtk.Box.BoxChild)(this.vbox1[this.hbox2]));
            w20.PackType = ((Gtk.PackType)(1));
            w20.Position = 1;
            w20.Expand = false;
            w20.Fill = false;
            this.GtkAlignment5.Add(this.vbox1);
            this.frame2.Add(this.GtkAlignment5);
            this.GtkLabel5 = new Gtk.Label();
            this.GtkLabel5.Name = "GtkLabel5";
            this.GtkLabel5.LabelProp = Mono.Unix.Catalog.GetString("<b>data dependant</b>");
            this.GtkLabel5.UseMarkup = true;
            this.frame2.LabelWidget = this.GtkLabel5;
            this.vbox3.Add(this.frame2);
            Gtk.Box.BoxChild w23 = ((Gtk.Box.BoxChild)(this.vbox3[this.frame2]));
            w23.Position = 2;
            this.GtkAlignment.Add(this.vbox3);
            this.frame1.Add(this.GtkAlignment);
            this.nameLabel = new Gtk.Label();
            this.nameLabel.Name = "nameLabel";
            this.nameLabel.LabelProp = Mono.Unix.Catalog.GetString("<b>frame1</b>");
            this.nameLabel.UseMarkup = true;
            this.frame1.LabelWidget = this.nameLabel;
            this.Add(this.frame1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
            this.foregroundCheckButton.Released += new System.EventHandler(this.OnForegroundCheckButtonReleased);
            this.foregroundCButton.ColorSet += new System.EventHandler(this.OnForegroundCButtonColorSet);
            this.backgroundCheckButton.Released += new System.EventHandler(this.OnBackgroundCheckButtonReleased);
            this.backgroundCButton.ColorSet += new System.EventHandler(this.OnBackgroundCButtonColorSet);
            this.dataCheckButton.Released += new System.EventHandler(this.OnDataCheckButtonReleased);
            this.addTaggerDataConfbutton.Released += new System.EventHandler(this.OnAddTaggerDataConfbuttonReleased);
        }
    }
}
